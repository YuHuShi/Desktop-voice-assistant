/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#ifdef SIMULATOR
#include <platform/driver/lcd/LCD16bpp.hpp>
#endif
#include <gui/videointro_screen/VideoIntroView.hpp>
#include <gui/videointro_screen/VideoIntroPresenter.hpp>
#include <gui/menu_screen/MenuView.hpp>
#include <gui/menu_screen/MenuPresenter.hpp>
#include <gui/svg_screen/SVGView.hpp>
#include <gui/svg_screen/SVGPresenter.hpp>
#include <gui/dicedemo_screen/DiceDemoView.hpp>
#include <gui/dicedemo_screen/DiceDemoPresenter.hpp>
#include <gui/mjpeg_screen/MJPEGView.hpp>
#include <gui/mjpeg_screen/MJPEGPresenter.hpp>
#include <gui/compassscreen_screen/CompassScreenView.hpp>
#include <gui/compassscreen_screen/CompassScreenPresenter.hpp>
#include <gui/e_bikedemo_screen/E_BikeDemoView.hpp>
#include <gui/e_bikedemo_screen/E_BikeDemoPresenter.hpp>
#include <gui/screentransitiondemo_screen/ScreenTransitionDemoView.hpp>
#include <gui/screentransitiondemo_screen/ScreenTransitionDemoPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
    touchgfx::Texts::setLanguage(GB);
#ifdef SIMULATOR
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
#endif
}

/*
 * Screen Transition Declarations
 */

// Menu

void FrontendApplicationBase::gotoMenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMenuScreenNoTransitionImpl()
{
    touchgfx::makeTransition<MenuView, MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoMenuScreenWipeTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMenuScreenWipeTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMenuScreenWipeTransitionNorthImpl()
{
    touchgfx::makeTransition<MenuView, MenuPresenter, touchgfx::WipeTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoMenuScreenWipeTransitionSouth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMenuScreenWipeTransitionSouthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMenuScreenWipeTransitionSouthImpl()
{
    touchgfx::makeTransition<MenuView, MenuPresenter, touchgfx::WipeTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoMenuScreenWipeTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMenuScreenWipeTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMenuScreenWipeTransitionWestImpl()
{
    touchgfx::makeTransition<MenuView, MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoMenuScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMenuScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMenuScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<MenuView, MenuPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// SVG

void FrontendApplicationBase::gotoSVGScreenWipeTransitionSouth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSVGScreenWipeTransitionSouthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoSVGScreenWipeTransitionSouthImpl()
{
    touchgfx::makeTransition<SVGView, SVGPresenter, touchgfx::WipeTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// DiceDemo

void FrontendApplicationBase::gotoDiceDemoScreenWipeTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoDiceDemoScreenWipeTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDiceDemoScreenWipeTransitionNorthImpl()
{
    touchgfx::makeTransition<DiceDemoView, DiceDemoPresenter, touchgfx::WipeTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// MJPEG

void FrontendApplicationBase::gotoMJPEGScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMJPEGScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMJPEGScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<MJPEGView, MJPEGPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// CompassScreen

void FrontendApplicationBase::gotoCompassScreenScreenWipeTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCompassScreenScreenWipeTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoCompassScreenScreenWipeTransitionWestImpl()
{
    touchgfx::makeTransition<CompassScreenView, CompassScreenPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// E_BikeDemo

void FrontendApplicationBase::gotoE_BikeDemoScreenWipeTransitionNorth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoE_BikeDemoScreenWipeTransitionNorthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoE_BikeDemoScreenWipeTransitionNorthImpl()
{
    touchgfx::makeTransition<E_BikeDemoView, E_BikeDemoPresenter, touchgfx::WipeTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ScreenTransitionDemo

void FrontendApplicationBase::gotoScreenTransitionDemoScreenWipeTransitionSouth()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreenTransitionDemoScreenWipeTransitionSouthImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenTransitionDemoScreenWipeTransitionSouthImpl()
{
    touchgfx::makeTransition<ScreenTransitionDemoView, ScreenTransitionDemoPresenter, touchgfx::WipeTransition<SOUTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
