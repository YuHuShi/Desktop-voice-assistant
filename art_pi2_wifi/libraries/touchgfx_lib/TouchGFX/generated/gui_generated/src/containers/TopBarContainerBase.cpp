/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/topbarContainerBase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

topbarContainerBase::topbarContainerBase() :
    backButtonIsPressedCallback(0),
    flexButtonCallback(this, &topbarContainerBase::flexButtonCallbackHandler)
{
    setWidth(800);
    setHeight(50);
    mcuTitle.setXY(584, 12);
    mcuTitle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    mcuTitle.setLinespacing(0);
    mcuTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BBZA));
    add(mcuTitle);

    mcuValue.setPosition(634, 12, 60, 25);
    mcuValue.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    mcuValue.setLinespacing(0);
    Unicode::snprintf(mcuValueBuffer, MCUVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01T6).getText());
    mcuValue.setWildcard(mcuValueBuffer);
    mcuValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MM9I));
    add(mcuValue);

    fpsTite.setXY(700, 12);
    fpsTite.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    fpsTite.setLinespacing(0);
    fpsTite.setTypedText(touchgfx::TypedText(T___SINGLEUSE_42EO));
    add(fpsTite);

    fpsValue.setPosition(727, 12, 43, 25);
    fpsValue.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    fpsValue.setLinespacing(0);
    Unicode::snprintf(fpsValueBuffer, FPSVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B1JC).getText());
    fpsValue.setWildcard(fpsValueBuffer);
    fpsValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CWYQ));
    add(fpsValue);

    backButton.setIconBitmaps(Bitmap(BITMAP_ICON_BACK_24_NORMAL_ID), Bitmap(BITMAP_ICON_BACK_24_PRESSED_ID));
    backButton.setIconXY(10, 5);
    backButton.setAction(flexButtonCallback);
    backButton.setPosition(31, 0, 67, 50);
    add(backButton);
}

topbarContainerBase::~topbarContainerBase()
{

}

void topbarContainerBase::initialize()
{

}

void topbarContainerBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &backButton)
    {
        //EmitBackButtonIsPressed
        //When backButton clicked emit backButtonIsPressed callback
        //Emit callback
        emitBackButtonIsPressedCallback();
    }
}
