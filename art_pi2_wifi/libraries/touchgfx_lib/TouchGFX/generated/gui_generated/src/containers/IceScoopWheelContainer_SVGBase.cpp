/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/IceScoopWheelContainer_SVGBase.hpp>

IceScoopWheelContainer_SVGBase::IceScoopWheelContainer_SVGBase() :
    updateItemCallback(this, &IceScoopWheelContainer_SVGBase::updateItemCallbackHandler)
{
    setWidth(800);
    setHeight(200);
    iceScoopScrollWheel.setPosition(0, 0, 800, 200);
    iceScoopScrollWheel.setHorizontal(true);
    iceScoopScrollWheel.setCircular(true);
    iceScoopScrollWheel.setEasingEquation(touchgfx::EasingEquations::sineEaseOut);
    iceScoopScrollWheel.setSwipeAcceleration(100);
    iceScoopScrollWheel.setDragAcceleration(10);
    iceScoopScrollWheel.setNumberOfItems(10);
    iceScoopScrollWheel.setSelectedItemOffset(300);
    iceScoopScrollWheel.setOvershootPercentage(0);
    iceScoopScrollWheel.setDrawableSize(200, 0);
    iceScoopScrollWheel.setDrawables(iceScoopScrollWheelListItems, updateItemCallback);
    iceScoopScrollWheel.animateToItem(4, 0);
    add(iceScoopScrollWheel);
}

IceScoopWheelContainer_SVGBase::~IceScoopWheelContainer_SVGBase()
{

}

void IceScoopWheelContainer_SVGBase::initialize()
{
    iceScoopScrollWheel.initialize();
    for (int i = 0; i < iceScoopScrollWheelListItems.getNumberOfDrawables(); i++)
    {
        iceScoopScrollWheelListItems[i].initialize();
    }
}

void IceScoopWheelContainer_SVGBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &iceScoopScrollWheelListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        IceScoopItemContainer_SVG* cc = (IceScoopItemContainer_SVG*)d;
        iceScoopScrollWheelUpdateItem(*cc, itemIndex);
    }
}
