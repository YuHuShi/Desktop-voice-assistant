/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DICEDEMOVIEWBASE_HPP
#define DICEDEMOVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/dicedemo_screen/DiceDemoPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <gui/containers/cubeLeftRightButtonsContainer_DiceDemo.hpp>
#include <gui/containers/cubeUpDownButtonsContainer_DiceDemo.hpp>
#include <gui/containers/animationsDepthButton_DiceDemo.hpp>
#include <gui/containers/scaleSliderContainer_DiceDemo.hpp>
#include <gui/containers/SimpleDiceContainer_DiceDemo.hpp>
#include <gui/containers/AdvanceDiceContainer_DiceDemo.hpp>
#include <gui/containers/topbarContainer.hpp>

class DiceDemoViewBase : public touchgfx::View<DiceDemoPresenter>
{
public:
    DiceDemoViewBase();
    virtual ~DiceDemoViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void scaleSliderChanged(float value)
    {
        // Override and implement this function in Screen1
    }

    virtual void animationComplexTionChanged(bool value)
    {
        // Override and implement this function in Screen1
    }

    virtual void leftPressed()
    {
        // Override and implement this function in Screen1
    }

    virtual void rightPressed()
    {
        // Override and implement this function in Screen1
    }

    virtual void upPressed()
    {
        // Override and implement this function in Screen1
    }

    virtual void downPressed()
    {
        // Override and implement this function in Screen1
    }

    virtual void exitCubeAnimationEnded()
    {
        // Override and implement this function in Screen1
    }

    virtual void enterCubeAnimationEnded()
    {
        // Override and implement this function in Screen1
    }

    virtual void animationDone()
    {
        // Override and implement this function in Screen1
    }


protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image backgroundImage;
    touchgfx::Image topbarBackgroundImage;
    cubeLeftRightButtonsContainer_DiceDemo cubeLeftRightButtons;
    cubeUpDownButtonsContainer_DiceDemo cubeUpDownButtons;
    animationsDepthButton_DiceDemo animations;
    scaleSliderContainer_DiceDemo scaleSlider;
    SimpleDiceContainer_DiceDemo simpleDice;
    AdvanceDiceContainer_DiceDemo advanceDice;
    topbarContainer topbar;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DiceDemoViewBase, float> scaleSliderNewScaleValueCallback;
    touchgfx::Callback<DiceDemoViewBase, bool> animationsAnimationButtonPressedCallback;
    touchgfx::Callback<DiceDemoViewBase> cubeLeftRightButtonsLeftPressedCallback;
    touchgfx::Callback<DiceDemoViewBase> cubeLeftRightButtonsRightPressedCallback;
    touchgfx::Callback<DiceDemoViewBase> cubeUpDownButtonsUpPressedCallback;
    touchgfx::Callback<DiceDemoViewBase> cubeUpDownButtonsDownPressedCallback;
    touchgfx::Callback<DiceDemoViewBase> advanceDiceExitAnimationEndedCallback;
    touchgfx::Callback<DiceDemoViewBase> advanceDiceEnterAnimationEndedCallback;
    touchgfx::Callback<DiceDemoViewBase> advanceDiceAnimationDoneCallback;
    touchgfx::Callback<DiceDemoViewBase> simpleDiceAnimationDoneCallback;
    touchgfx::Callback<DiceDemoViewBase> topbarBackButtonIsPressedCallback;

    /*
     * Callback Handler Declarations
     */
    void scaleSliderNewScaleValueCallbackHandler(float value);
    void animationsAnimationButtonPressedCallbackHandler(bool value);
    void cubeLeftRightButtonsLeftPressedCallbackHandler();
    void cubeLeftRightButtonsRightPressedCallbackHandler();
    void cubeUpDownButtonsUpPressedCallbackHandler();
    void cubeUpDownButtonsDownPressedCallbackHandler();
    void advanceDiceExitAnimationEndedCallbackHandler();
    void advanceDiceEnterAnimationEndedCallbackHandler();
    void advanceDiceAnimationDoneCallbackHandler();
    void simpleDiceAnimationDoneCallbackHandler();
    void topbarBackButtonIsPressedCallbackHandler();

};

#endif // DICEDEMOVIEWBASE_HPP
