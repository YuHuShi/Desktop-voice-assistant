/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ANIMATIONSDEPTHBUTTON_DICEDEMOBASE_HPP
#define ANIMATIONSDEPTHBUTTON_DICEDEMOBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <gui/containers/selectedIconsContainer_DiceDemo.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class animationsDepthButton_DiceDemoBase : public touchgfx::Container
{
public:
    animationsDepthButton_DiceDemoBase();
    virtual ~animationsDepthButton_DiceDemoBase();
    virtual void initialize();

    /*
     * Custom Actions
     */
    virtual void touchOverlayPressed()
    {
        // Override and implement this function in Screen1
    }


    /*
     * Custom Trigger Callback Setters
     */
    void setAnimationButtonPressedCallback(touchgfx::GenericCallback<bool>& callback)
    {
        this->animationButtonPressedCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitAnimationButtonPressedCallback(bool value)
    {
        if (animationButtonPressedCallback && animationButtonPressedCallback->isValid())
        {
            this->animationButtonPressedCallback->execute( value);
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::Image background;
    touchgfx::Image dice3D;
    touchgfx::Image dice2D;
    touchgfx::MoveAnimator< selectedIconsContainer_DiceDemo > selectedIcons;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  buttonOverlay;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<bool>* animationButtonPressedCallback;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<animationsDepthButton_DiceDemoBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // ANIMATIONSDEPTHBUTTON_DICEDEMOBASE_HPP
