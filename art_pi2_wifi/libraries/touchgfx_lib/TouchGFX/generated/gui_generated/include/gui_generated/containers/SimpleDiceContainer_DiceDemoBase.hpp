/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SIMPLEDICECONTAINER_DICEDEMOBASE_HPP
#define SIMPLEDICECONTAINER_DICEDEMOBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/AnimationTextureMapper.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>

class SimpleDiceContainer_DiceDemoBase : public touchgfx::Container
{
public:
    SimpleDiceContainer_DiceDemoBase();
    virtual ~SimpleDiceContainer_DiceDemoBase();
    virtual void initialize();

    /*
     * Custom Actions
     */
    virtual void left()
    {
        // Override and implement this function in Screen1
    }

    virtual void right()
    {
        // Override and implement this function in Screen1
    }

    virtual void setScale(float value)
    {
        // Override and implement this function in Screen1
    }


    /*
     * Custom Trigger Callback Setters
     */
    void setAnimationDoneCallback(touchgfx::GenericCallback<>& callback)
    {
        this->animationDoneCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitAnimationDoneCallback()
    {
        if (animationDoneCallback && animationDoneCallback->isValid())
        {
            this->animationDoneCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::FadeAnimator< touchgfx::AnimationTextureMapper > singleSideDice;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* animationDoneCallback;

};

#endif // SIMPLEDICECONTAINER_DICEDEMOBASE_HPP
