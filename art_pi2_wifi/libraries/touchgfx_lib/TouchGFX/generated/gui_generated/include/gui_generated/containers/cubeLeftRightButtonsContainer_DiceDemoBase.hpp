/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CUBELEFTRIGHTBUTTONSCONTAINER_DICEDEMOBASE_HPP
#define CUBELEFTRIGHTBUTTONSCONTAINER_DICEDEMOBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class cubeLeftRightButtonsContainer_DiceDemoBase : public touchgfx::Container
{
public:
    cubeLeftRightButtonsContainer_DiceDemoBase();
    virtual ~cubeLeftRightButtonsContainer_DiceDemoBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setLeftPressedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->leftPressedCallback = &callback;
    }
    void setRightPressedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->rightPressedCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitLeftPressedCallback()
    {
        if (leftPressedCallback && leftPressedCallback->isValid())
        {
            this->leftPressedCallback->execute();
        }
    }
    virtual void emitRightPressedCallback()
    {
        if (rightPressedCallback && rightPressedCallback->isValid())
        {
            this->rightPressedCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::Image background;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  buttonLeft;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  buttonRight;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* leftPressedCallback;
    touchgfx::GenericCallback<>* rightPressedCallback;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<cubeLeftRightButtonsContainer_DiceDemoBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // CUBELEFTRIGHTBUTTONSCONTAINER_DICEDEMOBASE_HPP
