/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCALESLIDERCONTAINER_DICEDEMOBASE_HPP
#define SCALESLIDERCONTAINER_DICEDEMOBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/Slider.hpp>

class scaleSliderContainer_DiceDemoBase : public touchgfx::Container
{
public:
    scaleSliderContainer_DiceDemoBase();
    virtual ~scaleSliderContainer_DiceDemoBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setNewScaleValueCallback(touchgfx::GenericCallback<float>& callback)
    {
        this->newScaleValueCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitNewScaleValueCallback(float value)
    {
        if (newScaleValueCallback && newScaleValueCallback->isValid())
        {
            this->newScaleValueCallback->execute( value);
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::Image sliderBackground;
    touchgfx::Slider scaleSlider;
    touchgfx::Image largeScaleIcon;
    touchgfx::Image smallScaleIcon;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<float>* newScaleValueCallback;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<scaleSliderContainer_DiceDemoBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // SCALESLIDERCONTAINER_DICEDEMOBASE_HPP
