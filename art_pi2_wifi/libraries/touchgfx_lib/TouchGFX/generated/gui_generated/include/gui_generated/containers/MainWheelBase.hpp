/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINWHEELBASE_HPP
#define MAINWHEELBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/widgets/Button.hpp>

class MainWheelBase : public touchgfx::Container
{
public:
    MainWheelBase();
    virtual ~MainWheelBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setChangeScreenCallback(touchgfx::GenericCallback<uint8_t>& callback)
    {
        this->changeScreenCallback = &callback;
    }
    void setMoveWheelCallback(touchgfx::GenericCallback<>& callback)
    {
        this->moveWheelCallback = &callback;
    }

    /*
     * Custom Actions
     */
    virtual void subDemoSelected(uint8_t value);
    virtual void signalWheelMovement();

    /*
     * Virtual Action Handlers
     */
    virtual void confirmButtonClicked()
    {
        // Override and implement this function in MainWheel
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitChangeScreenCallback(uint8_t value)
    {
        if (changeScreenCallback && changeScreenCallback->isValid())
        {
            this->changeScreenCallback->execute( value);
        }
    }
    virtual void emitMoveWheelCallback()
    {
        if (moveWheelCallback && moveWheelCallback->isValid())
        {
            this->moveWheelCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::FadeAnimator< touchgfx::MoveAnimator< touchgfx::TextArea > > selectedDemoName;
    touchgfx::MoveAnimator< touchgfx::Button > confirmButton;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<uint8_t>* changeScreenCallback;
    touchgfx::GenericCallback<>* moveWheelCallback;

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainWheelBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // MAINWHEELBASE_HPP
