/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENTRANSITIONDEMOVIEWBASE_HPP
#define SCREENTRANSITIONDEMOVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screentransitiondemo_screen/ScreenTransitionDemoPresenter.hpp>
#include "gui/common/structs.hpp"
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/SlideMenu.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <gui/containers/bottombarContainer_ScreenTransition.hpp>
#include <gui/containers/topbarContainer_ScreenTransition.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/widgets/Button.hpp>

class ScreenTransitionDemoViewBase : public touchgfx::View<ScreenTransitionDemoPresenter>
{
public:
    ScreenTransitionDemoViewBase();
    virtual ~ScreenTransitionDemoViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void startTransitionPressed()
    {
        // Override and implement this function in Screen1
    }

    virtual void getTransitionInfo(TransitionInfo* value)
    {
        // Override and implement this function in Screen1
    }

    virtual void scrollWheelPressed()
    {
        // Override and implement this function in Screen1
    }

    virtual void scrollWheelAnimationEnded()
    {
        // Override and implement this function in Screen1
    }

    virtual void sliderMenuStateChanged(SlideMenu::State value)
    {
        // Override and implement this function in Screen1
    }

    virtual void animationSpeedButtonPressed(bool value)
    {
        // Override and implement this function in Screen1
    }


    /*
     * Virtual Action Handlers
     */
    virtual void bottomBarButtonClicked()
    {
        // Override and implement this function in ScreenTransitionDemo
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box backgroundBox;
    touchgfx::Image background;
    touchgfx::SlideMenu transitionMenu;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  bottomBarButton;
    bottombarContainer_ScreenTransition bottombar;
    topbarContainer_ScreenTransition topbar;
    touchgfx::FadeAnimator< touchgfx::TextArea > selectedTransitionText;
    touchgfx::FadeAnimator< touchgfx::Button > startTransitionButton;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ScreenTransitionDemoViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<ScreenTransitionDemoViewBase, TransitionInfo*> bottombarGetTransitionInfoCallback;
    touchgfx::Callback<ScreenTransitionDemoViewBase> bottombarScrollWheelPressedCallback;
    touchgfx::Callback<ScreenTransitionDemoViewBase> bottombarScrollWheelAnimationEndedCallback;
    touchgfx::Callback<ScreenTransitionDemoViewBase, const touchgfx::SlideMenu&> slideMenuStateChangedCallback;
    touchgfx::Callback<ScreenTransitionDemoViewBase, bool> bottombarAnimaitonSpeedPressedCallback;
    touchgfx::Callback<ScreenTransitionDemoViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void bottombarGetTransitionInfoCallbackHandler(TransitionInfo* value);
    void bottombarScrollWheelPressedCallbackHandler();
    void bottombarScrollWheelAnimationEndedCallbackHandler();
    void slideMenuStateChangedCallbackHandler(const touchgfx::SlideMenu& src);
    void bottombarAnimaitonSpeedPressedCallbackHandler(bool value);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREENTRANSITIONDEMOVIEWBASE_HPP
